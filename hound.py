import discord
from discord.ext import commands
from discord.ui import Button, View, Modal, TextInput
import json
from datetime import datetime

bot = commands.Bot(command_prefix="/", intents=discord.Intents.all())

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
with open('token_hound.json') as f:
    config = json.load(f)

SOURCE_CHANNEL_ID = config['source_channel_id']
TARGET_CHANNEL_ID = config['target_channel_id'] 
RECRUITER_ROLE_ID = config['recruiter_role_id']
ACCEPTED_ROLE_ID = config['accepted_role_id']
LOGS_CHANNEL_ID = config['logs_channel_id']

class CallModal(Modal, title="–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –æ–±–∑–≤–æ–Ω–∞"):
    time = TextInput(label="–§–æ—Ä–º–∞—Ç: 15:30 20.05.2024", placeholder="–ß–ß:–ú–ú –î–î.–ú–ú.–ì–ì–ì–ì")
    
    def __init__(self, view: View):
        super().__init__()
        self.view = view

    async def on_submit(self, interaction: discord.Interaction):
        try:
            call_time = datetime.strptime(self.time.value, "%H:%M %d.%m.%Y")
            formatted_time = call_time.strftime("%d %B –≤ %H:%M")
            
            embed = self.view.message.embeds[0]
            embed.add_field(
                name="–°—Ç–∞—Ç—É—Å",
                value=f"üïí –í—ã–∑–≤–∞–Ω –Ω–∞ –æ–±–∑–≤–æ–Ω {interaction.user.mention}\n**–í—Ä–µ–º—è:** {formatted_time}",
                inline=False
            )
            
            self.view.clear_items()
            self.view.add_item(Button(
                label="–ü—Ä–∏–Ω—è—Ç—å",
                style=discord.ButtonStyle.success,
                custom_id=f"accept_{self.view.member.id}",
                emoji="‚úÖ"
            ))
            self.view.add_item(Button(
                label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                style=discord.ButtonStyle.danger,
                custom_id=f"reject_{self.view.member.id}",
                emoji="‚ùå"
            ))
            
            await interaction.response.edit_message(embed=embed, view=self.view)
            
            embed = discord.Embed(
                title="üìÖ –í–∞—Å –≤—ã–∑–≤–∞–ª–∏ –Ω–∞ –æ–±–∑–≤–æ–Ω",
                description=f"**–î–∞—Ç–∞:** {formatted_time}\n**–†–µ–∫—Ä—É—Ç–µ—Ä:** {interaction.user.mention}",
                color=0x3498db
            )
            await self.view.member.send(embed=embed)
            
        except ValueError:
            await interaction.response.send_message(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ß–ß:–ú–ú –î–î.–ú–ú.–ì–ì–ì–ì",
                ephemeral=True
            )

class ApplicationView(View):
    def __init__(self, member: discord.Member = None, message: discord.Message = None):
        super().__init__(timeout=None)
        self.member = member
        self.message = message
        
        user_id = member.id if member else 0
        
        buttons = [
            Button(label="–ü—Ä–∏–Ω—è—Ç—å", style=discord.ButtonStyle.success, custom_id=f"accept_{user_id}", emoji="‚úÖ"),
            Button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger, custom_id=f"reject_{user_id}", emoji="‚ùå"),
            Button(label="–û–±–∑–≤–æ–Ω", style=discord.ButtonStyle.primary, custom_id=f"call_{user_id}", emoji="üìû")
        ]
        
        for btn in buttons:
            self.add_item(btn)

    async def interaction_check(self, interaction: discord.Interaction):
        if not any(role.id in [RECRUITER_ROLE_ID] for role in interaction.user.roles) and not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!", ephemeral=True)
            return False
        return True

    async def disable_all_buttons(self):
        for item in self.children:
            item.disabled = True
        if self.message:
            await self.message.edit(view=self)

    async def accept_application(self, interaction: discord.Interaction):
        role = interaction.guild.get_role(ACCEPTED_ROLE_ID)
        if role:
            try:
                await self.member.add_roles(role)
            except discord.Forbidden:
                pass
        
        embed = self.message.embeds[0]
        embed.add_field(
            name="–°—Ç–∞—Ç—É—Å",
            value=f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ {interaction.user.mention}",
            inline=False
        )
        
        await interaction.response.edit_message(embed=embed, view=None)  # –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
        
        embed = discord.Embed(
            title="üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!",
            description="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É!\n–û–∂–∏–¥–∞–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.",
            color=0x2ecc71
        )
        embed.set_thumbnail(url=self.member.display_avatar.url)
        await self.member.send(embed=embed)
        
        await self.log_action(interaction, "–ü—Ä–∏–Ω—è—Ç–∞", 0x2ecc71)

    async def reject_application(self, interaction: discord.Interaction):
        embed = self.message.embeds[0]
        embed.add_field(
            name="–°—Ç–∞—Ç—É—Å",
            value=f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ {interaction.user.mention}",
            inline=False
        )
        
        await interaction.response.edit_message(embed=embed, view=None)  # –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
        
        embed = discord.Embed(
            title="üòï –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
            description="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.",
            color=0xe74c3c
        )
        embed.set_thumbnail(url=self.member.display_avatar.url)
        await self.member.send(embed=embed)
        
        await self.log_action(interaction, "–û—Ç–∫–ª–æ–Ω–µ–Ω–∞", 0xe74c3c)

    async def call_for_interview(self, interaction: discord.Interaction):
        await interaction.response.send_modal(CallModal(self))

    async def log_action(self, interaction, action, color):
        log_channel = bot.get_channel(LOGS_CHANNEL_ID)
        if log_channel:
            embed = discord.Embed(
                title=f"–ó–∞—è–≤–∫–∞ {action.lower()}",
                color=color,
                timestamp=datetime.now()
            )
            embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=self.member.mention)
            embed.add_field(name="–†–µ–∫—Ä—É—Ç–µ—Ä", value=interaction.user.mention)
            embed.set_thumbnail(url=self.member.display_avatar.url)
            await log_channel.send(embed=embed)

@bot.event
async def on_message(message):
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.content}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤ (–∫—Ä–æ–º–µ –≤–µ–±—Ö—É–∫–æ–≤)
    if message.author.bot and not message.webhook_id:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if message.channel.id == SOURCE_CHANNEL_ID:
        try:
            print("–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            
            member = None
            username = None
            
            # 1. –ò—â–µ–º –ø–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—é
            if message.mentions:
                member = message.mentions[0]
                print(f"–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—é: {member}")
            
            # 2. –ò—â–µ–º –ø–æ –∏–º–µ–Ω–∏ –≤ —Ç–µ–∫—Å—Ç–µ
            if not member and message.content:
                for line in message.content.split('\n'):
                    if 'discord:' in line.lower():
                        username = line.split(':')[-1].strip()
                        print(f"–ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏: {username}")
                        member = discord.utils.find(
                            lambda m: m.name == username or m.display_name == username,
                            message.guild.members
                        )
                        if member:
                            break
            
            # 3. –ò—â–µ–º –≤ embed –ø–æ–ª—è—Ö
            if not member and message.embeds:
                for embed in message.embeds:
                    for field in embed.fields:
                        if 'discord' in field.name.lower():
                            username = field.value.strip('@')
                            print(f"–ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ embed: {username}")
                            member = discord.utils.find(
                                lambda m: m.name == username or m.display_name == username,
                                message.guild.members
                            )
                            if member:
                                break
            
            if not member:
                print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                return

            print(f"–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            
            # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏
            embed = discord.Embed(
                title="üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞",
                description=f"–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {member.mention}",
                color=0x3498db,
                timestamp=datetime.now()
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è (–∏—Å–∫–ª—é—á–∞—è Discord –∏ email)
            excluded_fields = ['discord', 'email', '–≤–∞—à –¥–∏—Å–∫–æ—Ä–¥', '–ø–æ—á—Ç–∞']
            if message.embeds:
                for field in message.embeds[0].fields:
                    if not any(ex in field.name.lower() for ex in excluded_fields):
                        embed.add_field(
                            name=field.name,
                            value=field.value or "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                            inline=False
                        )
            
            # –ë–æ–ª—å—à–æ–π –ø–æ—Ä—Ç—Ä–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            embed.set_thumbnail(url=member.display_avatar.url)
            embed.set_author(name=str(member), icon_url=member.display_avatar.url)
            embed.set_footer(text=f"ID: {member.id}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª
            target_channel = bot.get_channel(TARGET_CHANNEL_ID)
            if target_channel:
                print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª {TARGET_CHANNEL_ID}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
                msg = await target_channel.send(
                    content=f"<@&{RECRUITER_ROLE_ID}> –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!",
                    embed=embed
                )
                view = ApplicationView(member, msg)
                await msg.edit(view=view)
                print("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏: {e}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫

    await bot.process_commands(message)

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        custom_id = interaction.data["custom_id"]
        if custom_id.startswith(("accept_", "reject_", "call_")):
            action, user_id = custom_id.split('_')
            member = interaction.guild.get_member(int(user_id))
            
            if not member:
                await interaction.response.send_message("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", ephemeral=True)
                return
            
            view = ApplicationView(member, interaction.message)
            
            if action == "accept":
                await view.accept_application(interaction)
            elif action == "reject":
                await view.reject_application(interaction)
            elif action == "call":
                await view.call_for_interview(interaction)

@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    try:
        bot.add_view(ApplicationView())
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ View: {e}")

bot.run(config['token'])